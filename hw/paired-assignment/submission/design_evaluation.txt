In designing our program, we first evaluated our pre-existing versions of the original Legends game. While our approaches were fairly similar, we noted that one version (Version A) seemed to have a strong and consistent implementation of the hero's characteristics, items, and fighting ability, while the other version (Version B) had a solid implementation of the game map and the character movements. For this reason, we merged the two projects, keeping the hero- and fight-setup from Version A, and keeping the map and cell system from Version B. Though much of the code from both projects was modified during the merge, the basis in the original two projects can still be seen.

Creating the hybrid project in this way was quite useful while developing Legends of Valor. One helpful characteristic of Version A was that it had a NumericAttribute class to efficiently store and modify a hero's stats. This system remained useful in the creation of Valor--for example, applying the boosts from Bush/Cave/Koulou cells was relatively straightforward using this system. Another trait of Version A was its usage of an inventory to hold all of a hero's items; this allowed for market and fight situations to be handled in a more organized way. Meanwhile, Version B's system for creating the map made it fairly simple to adapt the old map to that fo the Valor game. This version used a variety of factories to create the grid's cells, and the new cell types were easily added by creating new subclass factories with the new specifications. 
One issue that arose when creating Valor was that both of the original versions were built for tracking a single traveling party, while Valor required that each hero and monster be tracked separately. This was solved by the creation of the Tracker class. This class proved to be very helpful in blending the two programs together: by giving each hero and monster an instance of Tracker, their movements could be controlled by modifying the tracker from within the map system. This allowed the heroes/monsters to each keep track of their own location, reducing the amount of communication necessary between the map and the main game loop.

Overall, our strategy for merging the two original versions seems to have been mostly successful. Because of Version A's system for holding items and stats, Valor's item/stat system is flexible as well, and the game could be easily modified to include a new item type or a new stat field. Similarly, Version B's map system gives Valor the ability flexibility to change its map dimensions and cell types. In this way, this hybrid implementation of Valor capitalizes on the strengths of both original version.
